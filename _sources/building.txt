## Modifying the active template and atl server include files for windows for IOT ##

*Line numbers are consecutive after each modification*
*Some atl server versions may have different line numbers, so make sure you only use the official distribution.*

#### atlutil.h ####

You must not use <atlpath.h> anywhere in the active template library.

    line 34 #include <atlpath.h>
	

#### atlstencil.h ####

You must comment out the following lines

    line 2894: //PathCanonicalizeA(pInfo->m_szFileName, strPath);

    line 2952:
    /*if (!PathCanonicalize(szFileBuf, strConv))
    {
    	return STENCIL_INVALIDINDEX;
    }*/

and replace it with:

    line 2894 - 2897:
    if (0 != strncpy_s(pInfo->m_szFileName, strPath.GetLength(), strPath, MAX_PATH))
    	return false;
    return true;

    line 2952: _tcscpy(szFileBuf, strConv);

#### atlisapi.h ####

You must comment out the following lines:

    line 22: //#include <atlspriv.h>
	line 52: //#include <atlpath.h>
    line 65: //#include <dbgautoattach.h>

    line 465 - 526: /*inline BOOL GetScriptFullFileName
    	(...)
    	return PathCanonicalizeA(szFullFileName, szTemp);
	}*/

You must add the following line:

    line 7068: static void *wildernessPv;

You must comment out the following lines:

    line 7095 - 7096:
    CIsapiWorker *pWorker = pT->m_spExtension->GetThreadWorker();
    ATLASSERT(pWorker);
    
    line 7099 - 7102:
    if(pWorker)
    {
    	HeapFree(pWorker->m_hHeap, HEAP_NO_SERIALIZE, this);
    }

You must replace the lines you previously commented out (7099 - 7102) with these lines:

    if (wildernessPv)
    	free(wildernessPv);

You must comment out the following lines:

    line 7117 - 7120
    CIsapiWorker *pWorker = pExtension->GetThreadWorker();
    ATLENSURE(pWorker);
    HeapAlloc(pWorker->m_hHeap, HEAP_NO_SERIALIZE, sizeof(PerThreadWrapper<THandler>));
	if (!pv)
		return FALSE;

You must add these lines (7121):

    wildernessPv = malloc(sizeof(PerThreadWrapper<THandler>));
    if (!wildernessPv)
		return FALSE;

You must replace line 7125 :

	PerThreadWrapper<THandler> *pHandler = new(pv) PerThreadWrapper<THandler>;

with this line

    PerThreadWrapper<THandler> *pHandler = new(wildernessPv)PerThreadWrapper<THandler>;

You must insert the following lines:

	inline void AtlInterlockedUpdateMax(long nCurrent, long* pnMax)
	{
		ATLENSURE(pnMax != NULL);
	
		long nMax;
		long nOrigMax;
	
		do
		{
			nMax = *pnMax;
			nOrigMax = 0;
			if (nCurrent > nMax)
				nOrigMax = InterlockedCompareExchange(pnMax, nCurrent, nMax);
		} while (nOrigMax != 0 && nOrigMax != nMax);
	}

You must comment out the following:
	
	line 7453 - 7616 comment out struct CPerfRequestStatObject, class CRequestPerfMon and class CPerfMonRequestStats

	line 8208 - 8258 comment out _AtlLoadRequestHandler

#### atlbase.h ####

You must comment out the following lines:

    line 206 - 219:
    /*HRESULT WINAPI RegisterClassObject(
    _In_ DWORD dwClsContext,
    _In_ DWORD dwFlags)
    {
    	(...)
    }*/

You must comment out the following lines:

    line 7205 - 7336: 
	/*ATLINLINE ATLAPI AtlRegisterClassCategoriesHelper
    {
		(...)
    	return(S_OK);
	}*/


#### atlcache.h ####

You must comment out the following line:

    line 19 //#include <atlperf.h>
	line 24 //#include <atlspriv.h>
    line 1327 - 1457:
    //struct CPerfStatObject : public CPerfObject
    (...)
    //}; // CStdStatClass
    
    line 1485 - 1551:
    //CPerfStatClass
    (...)
    //}; // CPerfStatClass

#### atlcomcli.h ####

You must comment out the following lines:

    line 130 - 146: /*_Check_return_ inline HRESULT AtlSetChildSite(
    	_Inout_ IUnknown* punkChild,
    	_Inout_opt_ IUnknown* punkParent)
    {
    	(...)
    	return hr;
    }*/

You must comment out the following lines:

    line 3028 - 3033:
    /*hr = punkVal->QueryInterface(__uuidof(IPersistStreamInit), (void**)&spStream);
    if (FAILED(hr))
    {
    	spStream.Detach();
    	return hr;
    }*/

You must comment out the following lines, except for line 3230:

    line 3227 - 3229, 3231:
    //hr = punkVal->QueryInterface(__uuidof(IPersistStreamInit), (void**)&spStream);
    //if (FAILED(hr))
    //{
    break; // do not comment out break;
    //}

#### atlsiface.h ####

You must comment out the following lines, except for line 369:

    line 20 #include <atlpath.h>
    line 358 - 368, 370:
    //CPath strBrowscapPath;

	//LPTSTR sz = strBrowscapPath.m_strPath.GetBuffer(MAX_PATH);
	//UINT nChars = ::GetModuleFileName(hInstance, sz, MAX_PATH);
	//strBrowscapPath.m_strPath.ReleaseBuffer(nChars);
	//if (nChars != 0 &&
	//	nChars != MAX_PATH &&
	//	strBrowscapPath.RemoveFileSpec())
	//{
	//	strBrowscapPath += _T("\\browscap.ini");
	//	if (SUCCEEDED(Load(strBrowscapPath)))
    return E_FAIL; // do not comment out return, instead replace S_OK with E_FAIL
    //}


After you've finished editing these files, you should end up with a directory of modified atl and atl server files.